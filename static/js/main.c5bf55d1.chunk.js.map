{"version":3,"sources":["components/Clue.js","lib/clue/generateSelectedClass.js","components/Clues.js","components/Header.js","examples/index.js","components/Modal.js","lib/constants.js","components/Cell.js","components/Row.js","components/Puzzle.js","lib/puzzle/clonePuzzle.js","lib/puzzle/constructPuzzle.js","lib/puzzle/determineIfFull.js","lib/clue/normalizeClues.js","lib/puzzle/checkIsWinner.js","lib/cell/move.js","lib/cell/jump.js","lib/cell/skip.js","lib/cell/step.js","lib/puzzle/formatDate.js","components/App.js","serviceWorker.js","index.js"],"names":["Clue","selectClue","_this","props","handleClick","number","direction","react_default","a","createElement","className","this","selectedClass","onClick","text","PureComponent","generateSelectedClass","selectedClue","clue","Clues","_ref","clues","toUpperCase","slice","map","i","components_Clue","key","concat","Header","hastitle","title","date","openModal","isOnline","author","examples","Modal","type","entry_default","calendarType","onChange","handleChange","value","maxDate","Date","example","dow","role","aria-label","ACROSS","BLOCK","DOWN","EMPTY","UP","RIGHT","LEFT","Cell","cellClueNumber","inputClass","selectedClueClass","selectInputCell","index","Row","row","inputCell","col","react","cell","components_Cell","input","Puzzle","selectedClueText","style","gridTemplateColumns","puzzle","length","gridTemplateRows","components_Row","clonePuzzle","r","c","Object","objectSpread","constructPuzzle","grid","gridnums","size","currentAcrossClueNumber","numberCoords","constructedPuzzle","colToDownNumberMap","gridIndex","rows","cols","across","down","push","determineIfFull","normalizeClues","parseInt","replace","checkIsWinner","every","moveUp","move","predicate","moveRight","moveLeft","moveDown","jumpUp","moveUpFn","hasEncounteredBlock","hasEncounteredCell","topBlankCellRow","jumpRight","moveRightFn","jumpLeft","moveLeftFn","leftmostBlankColumn","jumpDown","moveDownFn","jump","startCell","_startCell","slicedToArray","getStepFunction","skipRight","skipDown","skip","getSkipFunction","stepUp","stepRight","stepLeft","stepDown","step","formatDate","weekday","toLocaleString","month","getDate","getFullYear","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleKeyDown","event","code","preventDefault","handleArrowKey","handleTab","loadPuzzle","state","setState","initialState","isLoading","formattedDate","getMonth","fetch","then","res","json","body","document","addEventListener","inputCharacter","modalType","rawPuzzle","arrangePuzzle","catch","e","console","error","find","toISOString","_this$state$rawPuzzle","_constructPuzzle","selectDate","toConsumableArray","handleCellClick","_ref2","doToggleDirection","toggleDirection","keyCode","inputLetter","handleBackspace","toggleModal","_this$state$inputCell","_this$state","arrowDirection","match","toLowerCase","_inputCell","nextRow","nextCol","shiftKey","_move","includes","_move2","_step","_step2","_ref3","arrowEvent","arrowKey","letter","_this$state2","_inputCell2","isCellEmpty","nextCell","searchDirection","_move3","_move4","_inputCell3","updatedSelectedClue","_this$state$inputCell2","updatedSelectedDirection","updatedSelectedNumber","directions","arguments","undefined","entries","removeEventListener","_this2","_this$state3","components_Header","components_Puzzle","components_Clues","ReactDOM","createPortal","components_Modal","getElementById","Component","Boolean","window","location","hostname","render","components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5bf55d1.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport '../css/clue.css'\n\nclass Clue extends PureComponent {\n  selectClue = () => {\n    this.props.handleClick(this.props.number, this.props.direction)\n  }\n\n  render () {\n    return (\n      <li\n        className={'clue' + this.props.selectedClass}\n        onClick={this.selectClue}\n      >\n        {this.props.number} {this.props.text}\n      </li>\n    )\n  }\n}\n\nClue.propTypes = {\n  number: PropTypes.number,\n  direction: PropTypes.string,\n  selectClue: PropTypes.func,\n  selectedClass: PropTypes.string,\n  text: PropTypes.string\n}\n\nexport default Clue\n","function generateSelectedClass (selectedClue, clue) {\n  if (!selectedClue.direction || !selectedClue.number) {\n    return ''\n  }\n\n  if (selectedClue.direction !== clue.direction || selectedClue.number !== clue.number) {\n    return ''\n  }\n\n  return ' selected'\n}\n\nexport default generateSelectedClass\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Clue from './Clue'\n\nimport generateSelectedClass from '../lib/clue/generateSelectedClass'\n\nfunction Clues ({ clues, direction, handleClick, selectedClue }) {\n  return (\n    <div className={direction}>\n      <h4>{direction[0].toUpperCase() + direction.slice(1)}</h4>\n\n      <ul className='clues'>\n        {\n          clues.map((clue, i) => (\n            <Clue\n              key={`clue-${i}`}\n              text={clue.text}\n              selectedClass={generateSelectedClass(selectedClue, clue)}\n              direction={direction}\n              number={clue.number}\n              handleClick={handleClick}\n            />\n          ))\n        }\n      </ul>\n    </div>\n  )\n}\n\nClues.propTypes = {\n  clues: PropTypes.array,\n  direction: PropTypes.string,\n  handleClick: PropTypes.func,\n  selectedClue: PropTypes.object\n}\n\nexport default Clues\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Header (props) {\n  function openModal () {\n    props.openModal(props.isOnline ? 'calendar' : 'examples')\n  }\n\n  return (\n    <div className='header'>\n      <div className='title'>\n        <h1>{props.hastitle ? props.title : 'NY Times Daily Crossword'}</h1>\n      </div>\n      <p>\n        {props.date} <span className='date-link' onClick={openModal}>(change date)</span>\n      </p>\n      { props.author && <p>By {props.author}</p> }\n    </div>\n  )\n}\n\nHeader.propTypes = {\n  author: PropTypes.string,\n  date: PropTypes.string,\n  hastitle: PropTypes.bool,\n  isOnline: PropTypes.bool,\n  openModal: PropTypes.func,\n  title: PropTypes.string\n}\n\nexport default Header\n","import march18 from './3-18-2019.json'\nimport march31 from './3-31-2019.json'\nimport april2 from './4-2-2019.json'\n\nexport default [\n  march18,\n  march31,\n  april2\n]\n","import React from 'react'\nimport Calendar from 'react-calendar'\nimport PropTypes from 'prop-types'\n\nimport examples from '../examples'\n\nimport '../css/modal.css'\n\nfunction Modal (props) {\n  return (\n    <div className='modal-container'>\n      <div\n        className='modal-background'\n        onClick={props.handleClick}\n      />\n      <div className='modal-body'>\n        {\n          props.type === 'calendar' &&\n          <Calendar\n            calendarType='US'\n            onChange={props.handleChange}\n            value={props.date}\n            maxDate={new Date()}\n          />\n        }\n\n        {\n          props.type === 'examples' &&\n          <ul className='message'>\n            <h3>Please select from the following example puzzles:</h3>\n            {\n              examples.map(example => (\n                <li\n                  key={example.date}\n                  onClick={() => props.handleChange(new Date(example.date))}\n                  className='example-puzzle'\n                >\n                  {example.dow}, {example.date}\n                </li>\n              ))\n            }\n          </ul>\n        }\n\n        {\n          props.type === 'correct' &&\n          <div className='message'><h3>Congratulations, you solved the puzzle! <span role='img' aria-label='tada emoji'>🎉</span><span role='img' aria-label='boom emoji'>💥</span><span role='img' aria-label='ok hand emoji'>👌</span></h3></div>\n        }\n\n        {\n          props.type === 'incorrect' &&\n          <div className='message'><h3>Oh no, there is at least one incorrect answer. Keep trying!</h3></div>\n        }\n      </div>\n    </div>\n  )\n}\n\nModal.propTypes = {\n  handleClick: PropTypes.func,\n  handleChange: PropTypes.func,\n  date: PropTypes.object,\n  type: PropTypes.string\n}\n\nexport default Modal\n","export const ACROSS = 'across'\nexport const BLOCK = '.'\nexport const DOWN = 'down'\nexport const EMPTY = ''\n\nexport const UP = 'up'\nexport const RIGHT = 'right'\nexport const LEFT = 'left'\n","import React from 'react'\n\nimport { BLOCK } from '../lib/constants'\n\nimport '../css/cell.css'\n\n// TODO - HOC for these iterations?\n\nfunction Cell (props) {\n  const { cellClueNumber, inputClass, selectedClueClass, value } = props\n  const selectInputCell = () => {\n    props.selectInputCell(props.index)\n  }\n\n  if (value === BLOCK) {\n    return <div className='cell block' />\n  }\n\n  return (\n    <div\n      className={`cell ${inputClass + selectedClueClass}`}\n      onClick={selectInputCell}\n    >\n      {\n        cellClueNumber !== 0 &&\n        <div className='number'>{cellClueNumber}</div>\n      }\n      <div className='value'>{value}</div>\n    </div>\n  )\n}\n\nexport default Cell\n","import React, { Fragment } from 'react'\nimport Cell from './Cell'\n\nfunction Row (props) {\n  const {\n    index,\n    row,\n    inputCell,\n    selectedClue\n  } = props\n  const selectInputCell = col => props.selectInputCell([index, col])\n\n  return (\n    <Fragment>\n      {\n        row.map((cell, i) => (\n          <Cell\n            key={`cell-${i}`}\n            index={i}\n            value={cell.input}\n            cellClueNumber={cell.cellClueNumber}\n            inputClass={\n              inputCell[0] === index && inputCell[1] === i\n                ? ' input'\n                : ''\n            }\n            selectedClueClass={\n              cell.clues[selectedClue.direction] === selectedClue.number\n                ? ' selected-clue'\n                : ''\n            }\n            selectInputCell={selectInputCell}\n          />\n        ))\n      }\n    </Fragment>\n  )\n}\n\nexport default Row\n","import React from 'react'\n\nimport Row from './Row'\n\nimport '../css/puzzle.css'\n\nfunction Puzzle (props) {\n  return (\n    <div className='puzzle-container'>\n      <div className='selected-clue-header'>\n        <div className='selected-clue-number'>{props.selectedClue.number}{props.selectedClue.direction[0].toUpperCase()}</div>\n        <div className='selected-clue-text'>{props.selectedClueText}</div>\n      </div>\n\n      <div\n        className='puzzle'\n        style={{\n          gridTemplateColumns: `repeat(${props.puzzle[0].length}, 1fr)`,\n          gridTemplateRows: `repeat(${props.puzzle.length}, 1fr)`\n        }}\n      >\n        {\n          props.puzzle.map((row, i) => (\n            <Row\n              key={`row-${i}`}\n              index={i}\n              row={row}\n              inputCell={props.inputCell}\n              selectedClue={props.selectedClue}\n              selectInputCell={props.selectInputCell}\n            />\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Puzzle\n","function clonePuzzle (puzzle) {\n  return puzzle.map(r => r.map(c => ({ ...c })))\n}\n\nexport default clonePuzzle\n","import { BLOCK, EMPTY } from '../constants'\n\n\n// TODO - unit test!!!\n\n\n/**\n * We need to do the following things:\n *\n * 1. Transform the flat grid into a 2D array of rows and cells\n * 2. Assign outputNumbers to appropriate cells\n * 3. Assign the numbers to the clues to which the cell belongs\n *  - Each cell belongs to both an across clue and a down clue,\n *    we need to store that data for puzzle-clue-highlighting\n */\nfunction constructPuzzle (grid, gridnums, size) {\n  const numberCoords = {}\n  const constructedPuzzle = []\n  const colToDownNumberMap = {}\n\n  let gridIndex = 0\n  let cell\n  let cellClueNumber\n  let currentAcrossClueNumber\n  let row\n  let value\n\n  for (let r = 0; r < size.rows; r++) {\n    row = []\n\n    for (let c = 0; c < size.cols; c++) {\n      cellClueNumber = gridnums[gridIndex]\n      value = grid[gridIndex]\n\n      if (cellClueNumber > 0) {\n        numberCoords[cellClueNumber] = [r, c]\n\n        if (c === 0 || row[c - 1].value === BLOCK) {\n          currentAcrossClueNumber = cellClueNumber\n        }\n\n        if (r === 0 || constructedPuzzle[r - 1][c].value === BLOCK) {\n          colToDownNumberMap[c] = cellClueNumber\n        }\n      }\n\n      cell = {\n        cellClueNumber,\n        value,\n        // TODO - rename this?\n        clues: {\n          across: currentAcrossClueNumber,\n          down: colToDownNumberMap[c]\n        },\n        input: (value === BLOCK) ? value : EMPTY\n      }\n\n      row.push(cell)\n      gridIndex++\n    }\n\n    constructedPuzzle.push(row)\n  }\n\n  return {\n    numberCoords,\n    constructedPuzzle\n  }\n}\n\nexport default constructPuzzle\n","import { EMPTY } from '../constants'\n\nfunction determineIfFull (puzzle) {\n  for (let r = 0; r < puzzle.length; r++) {\n    for (let c = 0; c < puzzle[0].length; c++) {\n      if (puzzle[r][c].input === EMPTY) return false\n    }\n  }\n\n  return true\n}\n\nexport default determineIfFull\n","function normalizeClues (clues, direction) {\n  let number\n\n  const normalizedClues = clues.map((clue) => {\n    number = parseInt(clue, 10)\n\n    return {\n      direction,\n      number,\n      text: clue.replace(`${number}. `, '').replace(/&quot;/g, '\"')\n    }\n  })\n\n  return normalizedClues\n}\n\nexport default normalizeClues\n","function checkIsWinner (puzzle) {\n  return puzzle.every((row) => row.every(cell => cell.input.toUpperCase() === cell.value.toUpperCase()))\n}\n\nexport default checkIsWinner\n","export function moveUp (row, col, puzzle) {\n  const move = (r, predicate) => {\n    if (r <= 0) return [row, col]\n    if (predicate(r)) return [r - 1, col]\n\n    return move(r - 1, predicate)\n  }\n\n  return move\n}\n\nexport function moveRight (row, col, puzzle) {\n  const move = (c, predicate) => {\n    if (c >= puzzle[0].length - 1) return [row, col]\n    if (predicate(c)) return [row, c + 1]\n    return move(c + 1, predicate)\n  }\n\n  return move\n}\n\nexport function moveLeft (row, col, puzzle) {\n  const move = (c, predicate) => {\n    if (c <= 0) return [row, col]\n    if (predicate(c)) return [row, c - 1]\n    return move(c - 1, predicate)\n  }\n\n  return move\n}\n\nexport function moveDown (row, col, puzzle) {\n  const move = (r, predicate) => {\n    if (r >= puzzle.length - 1) return [row, col]\n    if (predicate(r)) return [r + 1, col]\n    return move(r + 1, predicate)\n  }\n\n  return move\n}\n","/**\n * Jump to the next clue\n */\nimport { moveUp, moveRight, moveLeft, moveDown } from './move'\nimport { BLOCK, EMPTY } from '../constants'\n\nfunction jump (puzzle, startCell, direction) {\n  const [row, col] = startCell\n\n  return getStepFunction(direction)(row, col, puzzle)\n}\n\nfunction getStepFunction (direction) {\n  switch (direction) {\n    case 'up':\n      return jumpUp\n    case 'right':\n      return jumpRight\n    case 'left':\n      return jumpLeft\n    case 'down':\n    default:\n      return jumpDown\n  }\n}\n\nfunction jumpUp (row, col, puzzle) {\n  const moveUpFn = moveUp(row, col, puzzle)\n  let hasEncounteredBlock = false\n  let hasEncounteredCell = false\n  let topBlankCellRow = row\n\n  const determineStop = (r) => {\n    if (puzzle[r - 1][col].value === BLOCK) {\n      if (hasEncounteredBlock && hasEncounteredCell) return true\n\n      hasEncounteredBlock = true\n    } else {\n      if (hasEncounteredBlock) hasEncounteredCell = true\n    }\n\n    if (puzzle[r - 1][col].input === EMPTY && r - 1 < topBlankCellRow) {\n      topBlankCellRow = r - 1\n      return false\n    }\n\n    return false\n  }\n\n  moveUpFn(row, determineStop)\n\n  return [topBlankCellRow, col]\n}\n\nfunction jumpRight (row, col, puzzle) {\n  const moveRightFn = moveRight(row, col, puzzle)\n  let hasEncounteredBlock = false\n\n  const determineStop = (c) => {\n    if (puzzle[row][c + 1].value === BLOCK) hasEncounteredBlock = true\n    return hasEncounteredBlock && puzzle[row][c + 1].input === EMPTY\n  }\n\n  return moveRightFn(col, determineStop)\n}\n\nfunction jumpLeft (row, col, puzzle) {\n  const moveLeftFn = moveLeft(row, col, puzzle)\n  let hasEncounteredBlock = false\n  let hasEncounteredCell = false\n  let leftmostBlankColumn = col\n\n  const determineStop = (c) => {\n    if (puzzle[row][c - 1].value === BLOCK) {\n      if (hasEncounteredBlock && hasEncounteredCell) return true\n\n      hasEncounteredBlock = true\n    } else {\n      if (hasEncounteredBlock) hasEncounteredCell = true\n    }\n\n    if (puzzle[row][c - 1].input === EMPTY && c - 1 < leftmostBlankColumn) {\n      leftmostBlankColumn = c - 1\n      return false\n    }\n\n    return false\n  }\n\n  moveLeftFn(col, determineStop)\n\n  return [row, leftmostBlankColumn]\n}\n\nfunction jumpDown (row, col, puzzle) {\n  const moveDownFn = moveDown(row, col, puzzle)\n  let hasEncounteredBlock = false\n  const determineStop = (r) => {\n    if (puzzle[r + 1][col].value === BLOCK) hasEncounteredBlock = true\n    return hasEncounteredBlock && puzzle[r + 1][col].input === EMPTY\n  }\n\n  return moveDownFn(row, determineStop)\n}\n\nexport default jump\n","import { moveRight, moveDown } from './move'\nimport { EMPTY } from '../constants'\n\nfunction skip (puzzle, startCell, direction) {\n  const [row, col] = startCell\n\n  return getSkipFunction(direction)(row, col, puzzle)\n}\n\nfunction getSkipFunction (direction) {\n  switch (direction) {\n    case 'right':\n      return skipRight\n    case 'down':\n    default:\n      return skipDown\n  }\n}\n\nfunction skipRight (row, col, puzzle) {\n  const moveRightFn = moveRight(row, col, puzzle)\n  return moveRightFn(col, c => puzzle[row][c + 1].input === EMPTY)\n}\n\nfunction skipDown (row, col, puzzle) {\n  const moveDownFn = moveDown(row, col, puzzle)\n  return moveDownFn(row, r => puzzle[r + 1][col].input === EMPTY)\n}\n\nexport default skip\n","import { moveUp, moveRight, moveLeft, moveDown } from './move'\nimport { BLOCK } from '../constants'\n\nfunction step (puzzle, startCell, direction) {\n  const [row, col] = startCell\n\n  return getStepFunction(direction)(row, col, puzzle)\n}\n\nfunction getStepFunction (direction) {\n  switch (direction) {\n    case 'up':\n      return stepUp\n    case 'right':\n      return stepRight\n    case 'left':\n      return stepLeft\n    case 'down':\n    default:\n      return stepDown\n  }\n}\n\nfunction stepUp (row, col, puzzle) {\n  const moveUpFn = moveUp(row, col, puzzle)\n  return moveUpFn(row, r => puzzle[r - 1][col].value !== BLOCK)\n}\n\nfunction stepRight (row, col, puzzle) {\n  const moveRightFn = moveRight(row, col, puzzle)\n  return moveRightFn(col, c => puzzle[row][c + 1].value !== BLOCK)\n}\n\nfunction stepLeft (row, col, puzzle) {\n  const moveLeftFn = moveLeft(row, col, puzzle)\n  return moveLeftFn(col, c => puzzle[row][c - 1].value !== BLOCK)\n}\n\nfunction stepDown (row, col, puzzle) {\n  const moveDownFn = moveDown(row, col, puzzle)\n  return moveDownFn(row, r => puzzle[r + 1][col].value !== BLOCK)\n}\n\nexport default step\n","function formatDate (date) {\n  const weekday = date.toLocaleString('en-us', { weekday: 'long' })\n  const month = date.toLocaleString('en-us', { month: 'long' })\n\n  return `${weekday}, ${month} ${date.getDate()}, ${date.getFullYear()}`\n}\n\nexport default formatDate\n","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Clues from './Clues'\nimport Header from './Header'\nimport Modal from './Modal'\nimport Puzzle from './Puzzle'\n\nimport examples from '../examples'\n\nimport clonePuzzle from '../lib/puzzle/clonePuzzle'\nimport constructPuzzle from '../lib/puzzle/constructPuzzle'\nimport determineIfFull from '../lib/puzzle/determineIfFull'\nimport normalizeClues from '../lib/clue/normalizeClues'\nimport checkIsWinner from '../lib/puzzle/checkIsWinner'\nimport jump from '../lib/cell/jump'\nimport skip from '../lib/cell/skip'\nimport step from '../lib/cell/step'\nimport formatDate from '../lib/puzzle/formatDate'\nimport {\n  ACROSS,\n  BLOCK,\n  DOWN,\n  EMPTY,\n  UP,\n  RIGHT,\n  LEFT\n} from '../lib/constants'\n\nimport '../css/App.css'\n\nclass App extends Component {\n  constructor () {\n    super()\n\n    this.initialState = {\n      clues: {\n        across: [],\n        down: []\n      },\n      date: new Date(),\n      modalType: '',\n      entries: [],\n      inputCell: [0, 0],\n      isLoading: false,\n      isOnline: true,\n      numberCoords: {},\n      puzzle: [],\n      rawPuzzle: {},\n      selectedClue: {\n        number: 1,\n        direction: ACROSS\n      }\n    }\n\n    this.state = { ...this.initialState }\n    this.directions = [ACROSS, DOWN]\n  }\n\n  componentDidMount () {\n    this.loadPuzzle()\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('keyup', this.inputCharacter, false)\n    document.removeEventListener('keydown', this.handleKeyDown, false)\n  }\n\n  handleKeyDown = (event) => {\n    switch (event.code) {\n      case 'ArrowUp':\n      case 'ArrowRight':\n      case 'ArrowDown':\n      case 'ArrowLeft': {\n        event.preventDefault()\n        return this.handleArrowKey(event)\n      }\n      case 'Tab': {\n        event.preventDefault()\n        return this.handleTab(event)\n      }\n      case 'Space':\n        event.preventDefault()\n        break\n      default:\n        return false\n    }\n  }\n\n  loadPuzzle = () => {\n    // TODO - Check if puzzle is already in localStorage\n\n    const { date } = this.state\n    this.setState(() => ({ ...this.initialState, date, isLoading: true }))\n\n    const formattedDate = `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`\n\n    fetch(`http://localhost:3333/xword?date=${formattedDate}`)\n      .then(res => res.json())\n      .then(body => {\n        document.addEventListener('keyup', this.inputCharacter, false)\n        document.addEventListener('keydown', this.handleKeyDown, false)\n\n        this.setState(() => ({ isLoading: false, modalType: '', rawPuzzle: body }), this.arrangePuzzle)\n      })\n      .catch(e => {\n        console.error(e)\n\n        document.addEventListener('keyup', this.inputCharacter, false)\n        document.addEventListener('keydown', this.handleKeyDown, false)\n\n        const rawPuzzle = examples.find(example => new Date(example.date).toISOString() === date.toISOString()) || examples[0]\n\n        this.setState(() => ({\n          rawPuzzle,\n          isLoading: false,\n          isOnline: false,\n          modalType: '',\n          date: new Date(rawPuzzle.date)\n        }), this.arrangePuzzle)\n      })\n  }\n\n  arrangePuzzle = () => {\n    const { clues, grid, gridnums, size } = this.state.rawPuzzle\n    const { numberCoords, constructedPuzzle: puzzle } = constructPuzzle(grid, gridnums, size)\n    const across = normalizeClues(clues.across, ACROSS)\n    const down = normalizeClues(clues.down, DOWN)\n\n    this.setState(() => ({ puzzle, numberCoords, clues: { across, down } }))\n  }\n\n  selectDate = (date) => {\n    if (date.toISOString() === this.state.date.toISOString()) return false\n\n    this.setState({ date }, this.loadPuzzle)\n  }\n\n  selectClue = (number, direction) => {\n    this.setState(() => ({\n      selectedClue: { direction, number },\n      inputCell: [...this.state.numberCoords[number]]\n    }))\n  }\n\n  handleCellClick = ([row, col]) => {\n    const doToggleDirection = (row === this.state.inputCell[0] && col === this.state.inputCell[1])\n\n    this.selectInputCell([row, col])\n\n    if (doToggleDirection) this.toggleDirection()\n  }\n\n  inputCharacter = (event) => {\n    if (event.keyCode >= 65 && event.keyCode <= 90) {\n      return this.inputLetter(event.key.toUpperCase())\n    }\n\n    switch (event.code) {\n      case 'Space': {\n        return this.toggleDirection()\n      }\n      case 'Backspace': {\n        return this.handleBackspace()\n      }\n      case 'Escape': {\n        if (this.state.modalType.length > 0) {\n          this.toggleModal('')\n        }\n        break\n      }\n      default: {\n        return false\n      }\n    }\n  }\n\n  handleBackspace = () => {\n    const puzzle = clonePuzzle(this.state.puzzle)\n    let [row, col] = this.state.inputCell\n\n    if (puzzle[row][col].input === EMPTY) {\n      if (this.state.selectedClue.direction === ACROSS) {\n        if (col === 0 || puzzle[row][col - 1].value === BLOCK) return false\n\n        col--\n      } else {\n        if (row === 0 || puzzle[row - 1][col].value === BLOCK) return false\n\n        row--\n      }\n    }\n\n    puzzle[row][col].input = EMPTY\n\n    this.setState(() => ({ puzzle, inputCell: [row, col] }))\n  }\n\n  handleArrowKey = (event) => {\n    const { inputCell, puzzle, selectedClue } = this.state\n    const arrowDirection = event.code.match(/Arrow(Up|Right|Down|Left)/)[1].toLowerCase()\n\n    let [nextRow, nextCol] = inputCell\n\n    if (event.shiftKey) {\n      const isSameAxis = (\n        ([LEFT, RIGHT].includes(arrowDirection) && selectedClue.direction === ACROSS) ||\n        ([UP, DOWN].includes(arrowDirection) && selectedClue.direction === DOWN)\n      )\n      const move = isSameAxis ? jump : step;\n      [nextRow, nextCol] = move(puzzle, inputCell, arrowDirection)\n    } else {\n      const doChangeDirection = (\n        ([LEFT, RIGHT].includes(arrowDirection) && selectedClue.direction === DOWN) ||\n        ([UP, DOWN].includes(arrowDirection) && selectedClue.direction === ACROSS)\n      )\n\n      if (doChangeDirection) return this.toggleDirection();\n\n      [nextRow, nextCol] = step(puzzle, inputCell, arrowDirection)\n    }\n\n    if (nextRow !== inputCell[0] || nextCol !== inputCell[1]) {\n      this.selectInputCell([nextRow, nextCol])\n    }\n  }\n\n  handleTab = ({ shiftKey }) => {\n    const arrowEvent = { shiftKey: true }\n    const { direction } = this.state.selectedClue\n    let arrowKey = 'Arrow'\n\n    if (direction === ACROSS) {\n      arrowKey += shiftKey ? 'Left' : 'Right'\n    } else {\n      arrowKey += shiftKey ? 'Up' : 'Down'\n    }\n\n    arrowEvent.code = arrowKey\n\n    this.handleArrowKey(arrowEvent)\n  }\n\n  inputLetter = (letter) => {\n    const puzzle = clonePuzzle(this.state.puzzle)\n    const { inputCell, selectedClue } = this.state\n    const [row, col] = inputCell\n    const isCellEmpty = puzzle[row][col].input === EMPTY\n\n    puzzle[row][col].input = letter\n\n    this.setState(() => ({ puzzle }), () => {\n      if (determineIfFull(this.state.puzzle)) {\n        if (checkIsWinner(this.state.puzzle)) this.toggleModal('correct')\n        else this.toggleModal('incorrect')\n      }\n\n      // TODO - Maybe create separate functions for these checks\n      if (\n        (selectedClue.direction === ACROSS && col === puzzle[0].length - 1) ||\n        (selectedClue.direction === DOWN && row === puzzle.length - 1)\n      ) {\n        return false\n      }\n\n      const nextCell = selectedClue.direction === ACROSS ? puzzle[row][col + 1] : puzzle[row + 1][col]\n      const isEndOfClue = !nextCell || nextCell.value === BLOCK\n\n      if (isEndOfClue) return false\n\n      const searchDirection = selectedClue.direction === DOWN ? DOWN : RIGHT\n      const move = isCellEmpty ? skip : step\n      const [nextRow, nextCol] = move(this.state.puzzle, inputCell, searchDirection)\n\n      this.selectInputCell([nextRow, nextCol])\n    })\n  }\n\n  selectInputCell = (inputCell) => {\n    const [row, col] = inputCell\n    const { direction } = this.state.selectedClue\n    const updatedSelectedClue = {\n      direction,\n      number: this.state.puzzle[row][col].clues[direction]\n    }\n\n    this.setState(() => ({ inputCell: [...inputCell], selectedClue: updatedSelectedClue }))\n  }\n\n  toggleDirection = () => {\n    const [row, col] = this.state.inputCell\n    const { direction } = this.state.selectedClue\n    let updatedSelectedDirection = direction\n    let updatedSelectedNumber = this.state.puzzle[row][col].clues[direction]\n\n    updatedSelectedDirection = updatedSelectedDirection === this.directions[0] ? this.directions[1] : this.directions[0]\n\n    if (this.state.puzzle[row][col].clues[updatedSelectedDirection] !== updatedSelectedNumber) {\n      updatedSelectedNumber = this.state.puzzle[row][col].clues[updatedSelectedDirection]\n    }\n\n    const updatedSelectedClue = {\n      direction: updatedSelectedDirection,\n      number: updatedSelectedNumber\n    }\n\n    this.setState(() => ({ selectedClue: updatedSelectedClue }))\n  }\n\n  toggleModal = (type = '') => {\n    this.setState({ modalType: type })\n  }\n\n  render () {\n    const { clues, date, puzzle, inputCell, isLoading, rawPuzzle, selectedClue } = this.state\n\n    return (\n      <div className='App'>\n        <Header\n          openModal={this.toggleModal}\n          author={rawPuzzle.author}\n          date={formatDate(date)}\n          hastitle={rawPuzzle.hastitle}\n          isOnline={this.state.isOnline}\n          title={rawPuzzle.title}\n        />\n\n        {\n          isLoading &&\n          <div className='loading'>Loading puzzle...</div>\n        }\n\n        <div className='puzzle-area'>\n          {\n            puzzle.length > 0 &&\n            <Puzzle\n              inputCell={inputCell}\n              puzzle={puzzle}\n              selectedClue={selectedClue}\n              selectedClueText={this.state.clues[selectedClue.direction].find(c => c.number === selectedClue.number).text}\n              selectInputCell={this.handleCellClick}\n            />\n          }\n\n          {\n            !isLoading &&\n            this.directions.map((direction, i) => (\n              <Clues\n                key={`${i}-${direction}`}\n                clues={clues[direction]}\n                direction={direction}\n                selectedClue={selectedClue}\n                handleClick={this.selectClue}\n              />\n            ))\n          }\n        </div>\n\n        {\n          this.state.modalType.length > 0 &&\n          ReactDOM.createPortal(\n            <Modal\n              date={this.state.date}\n              handleClick={this.toggleModal}\n              handleChange={this.selectDate}\n              type={this.state.modalType}\n            />\n            , document.getElementById('modalRoot'))\n        }\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}